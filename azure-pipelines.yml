# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'
    Python38:
      python.version: '3.8'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest -v --cov=calculator
  displayName: 'pytest'
  # Other Tests
  # flake8 --exclude=venv* --statistics
  # pytest -v --cov=calculator

- script: |
    date
    echo "-----------------------------------"
    echo Download twistcli from Prisma Cloud
    echo "-----------------------------------"
    curl -k -u $PCACCESS:$PCSECRET --output ./twistcli $PRISMACLOUDCONSOLE/api/v1/util/twistcli
    echo "-------------------------------------"
    echo "Change mode of twistcli to executable"
    sudo chmod a+x twistcli
    echo "-------------------------------------"
    echo "Execute code scan with twistcli"
    echo "-------------------------------------"
# ./twistcli coderepo scan --u $PCACCESS --p $PCSECRET --address $PRISMACLOUDCONSOLE --details .
  displayName: 'Scan code with Prisma Cloud - twistcli'
- task: Bash@3
  inputs:
    filePath: './twistcli'
    arguments: 'coderepo scan --u $PCACCESS --p $PCSECRET --address $PRISMACLOUDCONSOLE --details .'


  env:
    PCACCESS: $(PrismaCloudAccessKey)
    PCSECRET: $(PrismaCloudSecretKey)